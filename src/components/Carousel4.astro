---
import ButtonAnimated from "./ButtonAnimated.astro";

---

<!-- Carousel Component -->
<div x-data="carousel()" class="relative w-full mx-auto overflow-hidden min-h-screen">
  <!-- Slides Container with Touch Events -->
  <div
    class="relative flex transition-transform duration-700 ease-in-out h-screen"
    :style="`transform: translateX(-${activeSlide * 100}%)`"
    @touchstart="handleTouchStart($event)"
    @touchmove="handleTouchMove($event)"
    @touchend="handleTouchEnd()"
  >
    <!-- Slides -->
    <template x-for="(src, index) in images" :key="index">
      <div class="flex-shrink-0 w-full h-full relative">
        <img 
          :src="src" 
          :alt="`Slide ${index + 1}`" 
          class="w-full h-full object-cover"
          :loading="index === 0 ? 'eager' : 'lazy'"
          decoding="async"
        />
      </div>
    </template>
  </div>

  <!-- Controles de PaginaciÃ³n -->
  <div class="absolute bottom-4 left-0 right-0 flex items-center justify-center gap-2 z-10">
    <template x-for="(_, index) in images.length" :key="index">
      <button 
        @click="goToSlide(index)" 
        :aria-label="`Ir a la diapositiva ${index + 1}`"
        class="w-3 h-3 rounded-full transition-all duration-300 ease-in-out focus:outline-none"
        :class="activeSlide === index ? 'bg-white' : 'bg-white bg-opacity-50 hover:bg-opacity-100'">
      </button>
    </template>
  </div>

  <!-- Letras Superpuestas -->
  <div class="absolute inset-0 z-30 flex flex-col justify-between items-center text-center p-6">
    <header class="mt-20">
      <h2 
        id="main-heading" 
        class="text-white font-bold text-6xl lg:text-8xl xl:text-9xl animate-slide-in-bottom"
      >
        KING OF GYMS
      </h2>
      <p 
        id="sub-heading" 
        class="text-white text-2xl lg:text-4xl xl:text-6xl animate-fade-in-up delay-500"
      >
        Crece entrenando, mejora tu vida
      </p>
    </header>
    <div class="flex flex-col flex-grow justify-end pb-20 xl:pb-48 w-full items-center animate-fade-in-scale animate-delay-[4000ms]">
      <ButtonAnimated />
    </div>
  </div>
</div>

<script>
  import Alpine from 'alpinejs';

  const pcImages = [
    '/carousel/1inicio.webp',
    '/carousel/2inicio.webp',
    '/carousel/3inicio.webp',
    '/carousel/4inicio.webp',
    '/carousel/5inicio.webp',
  ];

  const mobileImages = [
    '/carousel/1iniciov.webp',
    '/carousel/2iniciov.webp',
    '/carousel/3iniciov.webp',
    '/carousel/4iniciov.webp',
    '/carousel/5iniciov.webp',
    '/carousel/6iniciov.webp',
    '/carousel/7iniciov.webp',
    '/carousel/8iniciov.webp',
  ];

  Alpine.data('carousel', () => ({
    activeSlide: 0,
    interval: null,
    images: window.innerWidth >= 720 ? pcImages : mobileImages,
    lastWindowWidth: window.innerWidth,
    touchStartX: 0,
    touchEndX: 0,
    


    init() {
      this.startAutoSlide();
      window.addEventListener('resize', this.debounce(() => this.updateImages(), 200));
    },

    startAutoSlide() {
      this.interval = setInterval(() => {
        this.nextSlide();
      }, 5000);
    },

    stopAutoSlide() {
      clearInterval(this.interval);
    },

    nextSlide() {
      this.activeSlide = (this.activeSlide + 1) % this.images.length;
    },

    prevSlide() {
      this.activeSlide = (this.activeSlide - 1 + this.images.length) % this.images.length;
    },

    goToSlide(index) {
      this.activeSlide = index;
    },

    updateImages() {
      const windowWidth = window.innerWidth;
      const crossedBreakpoint = (this.lastWindowWidth < 720 && windowWidth >= 720) || (this.lastWindowWidth >= 720 && windowWidth < 720);

      if (crossedBreakpoint) {
        this.images = windowWidth >= 720 ? pcImages : mobileImages;
        this.activeSlide = 0;
      }

      this.lastWindowWidth = windowWidth;
    },

    generateSrcSet(src) {
      return `${src} 1x, ${src.replace('.webp', '@2x.webp')} 2x`;
    },

    // Touch Events
    handleTouchStart(event) {
      this.stopAutoSlide(); // Stop auto-sliding when user interacts
      this.touchStartX = event.touches[0].clientX;
    },

    handleTouchMove(event) {
      this.touchEndX = event.touches[0].clientX;
    },

    handleTouchEnd() {
      if (this.touchStartX - this.touchEndX > 50) {
        // Swipe left
        this.nextSlide();
      } else if (this.touchEndX - this.touchStartX > 50) {
        // Swipe right
        this.prevSlide();
      }
      this.startAutoSlide(); // Restart auto-sliding
      this.touchStartX = 0;
      this.touchEndX = 0;
    },

    debounce(func, wait) {
      let timeout;
      return (...args) => {
        const later = () => {
          clearTimeout(timeout);
          func.apply(this, args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }
  }));

  // srcset generator


  Alpine.start();
</script>

<style>
   /* Animaciones del texto */
   @keyframes slideInBottom {
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }

  @keyframes fadeInUp {
    0% { transform: translateY(50px); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
  }

  @keyframes fadeInScale {
    0% { transform: scale(0.5); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
  }

  .animate-slide-in-bottom { animation: slideInBottom 1.5s ease-out forwards; }
  .animate-fade-in-up { animation: fadeInUp 2s ease-out forwards; }
  .animate-fade-in-scale { animation: fadeInScale 2.5s ease-out forwards; }
  .animate-delay-[500ms] { animation-delay: 500ms; }
  .animate-delay-[4000ms] { animation-delay: 4000ms; }
</style>
